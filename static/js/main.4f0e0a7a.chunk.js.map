{"version":3,"sources":["components/Editor.tsx","components/Preview.tsx","App.tsx","index.tsx"],"names":["Editor","editorValueChange","input","resizeWindow","minimizeOnClick","addStyles","className","style","onClick","value","onChange","e","marked","setOptions","breaks","renderer","Renderer","Preview","dangerouslySetInnerHTML","__html","App","useState","placeholder","inputValue","setInputValue","singleWindowMode","setSingleWindowMode","singleWindowStyle","display","gridTemplateRows","gridTemplateColumns","justifyContent","undefined","alignItems","showEditor","setShowEditor","maximizeEditor","setShowPreviewer","minimizeEditor","showPreviewer","maximizePreviewer","minimizePreviewer","maximizeWindowStyle","width","height","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAwCeA,MA9Bf,YAMiB,IALfC,EAKc,EALdA,kBACAC,EAIc,EAJdA,MACAC,EAGc,EAHdA,aACAC,EAEc,EAFdA,gBACAC,EACc,EADdA,UAEA,OACE,sBAAKC,UAAU,SAASC,MAAOF,EAA/B,UACE,sBAAKC,UAAU,UAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,+BACE,oBAAIE,QAASJ,IACb,oBAAII,QAASJ,IACb,oBAAII,QAASL,SAGjB,qBAAKG,UAAU,cAAf,uBAEF,qBAAKA,UAAU,SAAf,SACE,0BACEA,UAAU,SACVG,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOV,EAAkBU,Y,gBC9B7CC,IAAOC,WAAW,CAChBC,QAAQ,IAGV,IAAMC,EAAgB,IAAIH,IAAOI,SAsClBC,MA7Bf,YAKkB,IAJhBf,EAIe,EAJfA,MACAC,EAGe,EAHfA,aACAC,EAEe,EAFfA,gBACAC,EACe,EADfA,UAMA,OACE,sBAAKC,UAAU,SAASC,MAAOF,EAA/B,UACE,sBAAKC,UAAU,UAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,+BACE,oBAAIE,QAASJ,IACb,oBAAII,QAASJ,IACb,oBAAII,QAASL,SAGjB,qBAAKG,UAAU,eAAf,0BAEF,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,WAAWY,wBAhBvB,CAAEC,OAAQP,IAAOV,EAAOa,YCiEpBK,MApFf,WACE,MAAoCC,mBAASC,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAMA,EAAgDH,oBAAS,GAAzD,mBAAOI,EAAP,KAAyBC,EAAzB,KAEMC,EAAyC,CAC7CC,QAAS,OACTC,iBAAkB,MAClBC,oBAAqB,MACrBC,oBAAgBC,EAChBC,gBAAYD,GAId,EAAoCX,oBAAS,GAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KAEMC,EAAiB,WACrBV,GAAoB,GACpBW,GAAiB,IAGbC,EAAiB,WACrBZ,GAAoB,GACpBW,GAAiB,IAInB,EAA0ChB,oBAAS,GAAnD,mBAAOkB,EAAP,KAAsBF,EAAtB,KAEMG,EAAoB,WACxBd,GAAoB,GACpBS,GAAc,IAGVM,EAAoB,WACxBf,GAAoB,GACpBS,GAAc,IAGVO,EAA2C,CAC/CC,MAAO,OACPC,OAAQ,QAGV,OACE,sBACEtC,UAAU,MACVC,MAAOkB,EAAmBE,OAAoBK,EAFhD,UAIGE,GACC,cAAC,EAAD,CACEhC,MAAOqB,EACPtB,kBAtDkB,SAACU,GACzBa,EAAcb,EAAEkC,OAAOpC,QAsDjBL,gBACGqB,EAAuCa,EAApBE,EAEtBrC,aAAcsB,EAAmBa,EAAiBF,EAClD/B,UACE6B,GAAcT,EAAmBiB,OAAsBV,IAI5DO,GACC,cAAC,EAAD,CACErC,MAAOqB,EACPnB,gBACGqB,EAAoCgB,EAAjBL,EAEtBjC,aACEsB,EAAmBgB,EAAoBD,EAEzCnC,UACEkC,GAAiBd,EAAmBiB,OAAsBV,QAUhEV,EAAW,6rCCpFjBwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4f0e0a7a.chunk.js","sourcesContent":["import React from 'react';\n\ninterface EditorProps {\n  editorValueChange(e: React.ChangeEvent<HTMLTextAreaElement>): void;\n  input: string;\n  resizeWindow(): void;\n  minimizeOnClick(): void;\n  addStyles?: React.CSSProperties;\n}\n\nfunction Editor({\n  editorValueChange,\n  input,\n  resizeWindow,\n  minimizeOnClick,\n  addStyles,\n}: EditorProps) {\n  return (\n    <div className='window' style={addStyles}>\n      <div className='top-bar'>\n        <div className='window-action'>\n          <ul>\n            <li onClick={minimizeOnClick}></li>\n            <li onClick={minimizeOnClick}></li>\n            <li onClick={resizeWindow}></li>\n          </ul>\n        </div>\n        <div className='editor-text'>EDITOR</div>\n      </div>\n      <div className='screen'>\n        <textarea\n          className='Editor'\n          value={input}\n          onChange={(e) => editorValueChange(e)}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Editor;\n","import React from 'react';\nimport marked from 'marked';\n\nmarked.setOptions({\n  breaks: true,\n});\n\nconst renderer: any = new marked.Renderer();\n\ninterface PreviewProps {\n  input: string;\n  resizeWindow(): void;\n  minimizeOnClick(): void;\n  addStyles?: React.CSSProperties;\n}\n\nfunction Preview({\n  input,\n  resizeWindow,\n  minimizeOnClick,\n  addStyles,\n}: PreviewProps) {\n  function createMarkup() {\n    return { __html: marked(input, renderer) };\n  }\n\n  return (\n    <div className='window' style={addStyles}>\n      <div className='top-bar'>\n        <div className='window-action'>\n          <ul>\n            <li onClick={minimizeOnClick}></li>\n            <li onClick={minimizeOnClick}></li>\n            <li onClick={resizeWindow}></li>\n          </ul>\n        </div>\n        <div className='preview-text'>PREVIEWER</div>\n      </div>\n      <div className='screen'>\n        <div className='markdown' dangerouslySetInnerHTML={createMarkup()} />\n      </div>\n    </div>\n  );\n}\n\nexport default Preview;\n","import React, { useState } from 'react';\nimport Editor from './components/Editor';\nimport Preview from './components/Preview';\n\nfunction App() {\n  const [inputValue, setInputValue] = useState(placeholder);\n  const editorValueChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  // Single Window Mode\n  const [singleWindowMode, setSingleWindowMode] = useState(false);\n\n  const singleWindowStyle: React.CSSProperties = {\n    display: 'grid',\n    gridTemplateRows: '1fr',\n    gridTemplateColumns: '1fr',\n    justifyContent: undefined,\n    alignItems: undefined,\n  };\n\n  // Show Editor State\n  const [showEditor, setShowEditor] = useState(true);\n\n  const maximizeEditor = () => {\n    setSingleWindowMode(true);\n    setShowPreviewer(false);\n  };\n\n  const minimizeEditor = () => {\n    setSingleWindowMode(false);\n    setShowPreviewer(true);\n  };\n\n  // Show Previewer State\n  const [showPreviewer, setShowPreviewer] = useState(true);\n\n  const maximizePreviewer = () => {\n    setSingleWindowMode(true);\n    setShowEditor(false);\n  };\n\n  const minimizePreviewer = () => {\n    setSingleWindowMode(false);\n    setShowEditor(true);\n  };\n\n  const maximizeWindowStyle: React.CSSProperties = {\n    width: '100%',\n    height: '100%',\n  };\n\n  return (\n    <div\n      className='App'\n      style={singleWindowMode ? singleWindowStyle : undefined}\n    >\n      {showEditor && (\n        <Editor\n          input={inputValue}\n          editorValueChange={editorValueChange}\n          minimizeOnClick={\n            !singleWindowMode ? maximizePreviewer : minimizeEditor\n          }\n          resizeWindow={singleWindowMode ? minimizeEditor : maximizeEditor}\n          addStyles={\n            showEditor && singleWindowMode ? maximizeWindowStyle : undefined\n          }\n        />\n      )}\n      {showPreviewer && (\n        <Preview\n          input={inputValue}\n          minimizeOnClick={\n            !singleWindowMode ? maximizeEditor : minimizePreviewer\n          }\n          resizeWindow={\n            singleWindowMode ? minimizePreviewer : maximizePreviewer\n          }\n          addStyles={\n            showPreviewer && singleWindowMode ? maximizeWindowStyle : undefined\n          }\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\nconst placeholder = `\n# Markdown Previewer App\nHi! I'm Jerome and welcome to my Markdown Previewer App!\nA markdown previewer is an app that parses markdown code into HTML styles. \nTry it out yourself! \n# How to Use\nOn the editor panel, type in the markdown code that you want to see on the preview panel on the right.\nTry the markdown code below to check it out! \n**To get a bolded text, type in these asterisks**\n> An arrow key character makes block Quotes!\n> You can have several lines of these\n> As many as you can!\n> As many as you want!\n> Isn't it cool?\nTo make a heading, try the sharp key as so!\n# Heading\n## Heading 2\n### Heading 3\nTo make bullet points, it's as simple as: \n- One!\n- Two! \n- Three!\n- Easy, right?\nYou can even include images like these from the internet! Wow! \n![React](https://logos-download.com/wp-content/uploads/2016/09/React_logo_small.png)\nTo include programming code, try typing these: \\`<div></div>\\`\nIf you want to include mulitple lines, you can do so by doing these: \n\\`\\`\\`\n  let x = 1;\n  let y = 2;\n  let z = x + y;\n\\`\\`\\`\nI hope you learn something about the fun things you can do with Markdown! If you enjoyed, please visit  [my Github](https://synerjay.github.com)\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport './markdown-style.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}